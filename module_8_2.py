# Домашнее задание по теме "Сложные моменты и исключения в стеке вызовов функции".
# Напишите 2 функции:
# Функция personal_sum(numbers):
def personal_sum(numbers):          # 1. Должна принимать коллекцию numbers.
    result = 0
    incorrect_data = 0
    for num in numbers:             # 2. Подсчитывать сумму чисел в numbers путём перебора
        try:
            result += num           # и увеличивать переменную result.
        except TypeError:           # 3. Если при переборе встречается данное типа отличного от числового,
                                    # то обработать исключение TypeError,
            print(f'Некорректный тип данных для подсчёта суммы - {num}')
            incorrect_data += 1     # увеличив счётчик incorrect_data на 1.

    return result, incorrect_data   # 4. В конечном итоге функция возвращает кортеж из двух значений:
                                    # result - сумма чисел, incorrect_data - кол-во некорректных данных.

# Функция calculate_average(numbers)
# 1. Должна принимать коллекцию numbers и возвращать: среднее арифметическое всех чисел.
def calculate_average(numbers):
    try:
        total_sum, incorrect_data = personal_sum(numbers)   # 2. Внутри для подсчёта суммы используйте функцию
                                                            # personal_sum написанную ранее.
        if len(numbers) - incorrect_data == 0:  # Вычисляем количество корректных значений коллекции
            return 0                            # Если все значения были некорректны, возвращаем ноль.
        return total_sum / (len(numbers) - incorrect_data)  # Вычисляем среднее арифметическое.
                                # 3. Т.к. коллекция numbers может оказаться пустой,
    except ZeroDivisionError:   # то обработайте исключение ZeroDivisionError при делении на 0
        return 0                # и верните 0.

                        # 4. Также в numbers может быть записана не коллекция, а другие типы данных, например числа.
    except TypeError:   # Обработайте исключение TypeError,
        print('В numbers записан некорректный тип данных')  # выводя строку 'В numbers записан некорректный тип данных'.
        return None     # В таком случае функция просто вернёт None.

# Пример выполнения программы:
print(f'Результат 1: {calculate_average("1, 2, 3")}') # Строка перебирается, но каждый символ - строковый тип
print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}') # Учитываются только 1 и 3
print(f'Результат 3: {calculate_average(567)}') # Передана не коллекция
print(f'Результат 4: {calculate_average([42, 15, 36, 13])}') # Всё должно работать

# Вывод на консоль:
# Некорректный тип данных для подсчёта суммы - 1
# Некорректный тип данных для подсчёта суммы - ,
# Некорректный тип данных для подсчёта суммы -
# Некорректный тип данных для подсчёта суммы - 2
# Некорректный тип данных для подсчёта суммы - ,
# Некорректный тип данных для подсчёта суммы -
# Некорректный тип данных для подсчёта суммы - 3
# Результат 1: 0
# Некорректный тип данных для подсчёта суммы - Строка
# Некорректный тип данных для подсчёта суммы - Ещё Строка
# Результат 2: 2.0
# В numbers записан некорректный тип данных
# Результат 3: None
# Результат 4: 26.5

